# MarkLogic Analytics Dashboard

This application was generated by the MarkLogic-Node [Slush](https://github.com/klei/slush) generator, with the following components:

- [AngularJS](https://angularjs.org/)
- [Gulp](http://gulpjs.com/)
- [node.js](http://nodejs.org/): very thin layer, hosting the Angular code and proxying MarkLogic REST API requests
- [Roxy Deployer](https://github.com/marklogic/roxy): bootstrap MarkLogic databases, application servers, etc; scaffolding for MarkLogic REST API service extensions

# Preparing for installation

The following softwares are required before you can install and run the application on your computer.

- git v1.9.5
- ruby v2.2.2 64 bit
- python 3.4.3
- node v0.12.7 64 bit
- MarkLogic 8
- gulp - npm install --global gulp
- bower - npm install --global bower

# Cloning the application on your computer

- Open a command prompt.
- Change the current working directory to the location where you want the cloned application to be made.
- Run ```git clone https://github.com/jianmin/analytics-dashboard.git```
- The application will be cloned in the analytics-dashboard directory.

# Configuring the application

- `$ ./ml local bootstrap`
- `$ ./ml local deploy modules`
- `$ ./ml local deploy content` # this uploads a dictionary for spell-suggestions
- edit gulpfile.js. In the options section near the top, set your desired ports

# Running the application

- `$ gulp` # this will watch the .less file for changes and compile them to .css and runs the node server

# Data
## Sample Data
The application comes with 25 JSON documents generated by json-generator.com. You can load them with MLCP like this:

```bash
  $ ./ml local mlcp import -input_file_path sample-data -document_type json
```

Replace the username and password if needed. The from-json.xqy module is provided in the sample application under the src/transform directory.

## General Information
The application allows you to upload XML and CSV data files into MarkLogic database. You can then create reports and perform data analysis.
